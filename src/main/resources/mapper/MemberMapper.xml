<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.capstone.snowe.mapper.MemberMapper">


    <!-- member 테이블 전체 컬럼 -->
    <sql id="memberColumns">
        login_id
      , password
      , email
      , name
      , birthday
      , gender
      , nickname
      , role
      , created_date
      , modified_date
    </sql>

    <!-- 회원 정보 저장 (회원가입) -->
    <insert id="signup" parameterType="com.capstone.snowe.dto.MemberDTO">
        INSERT INTO member (
        <include refid="memberColumns" />
        ) VALUES (
        #{loginId}
        , #{password}
        , #{email}
        , #{name}
        , #{birthday}
        , #{gender}
        , #{nickname}
        , 'USER'
        , SYSDATE
        , NULL
        )
    </insert>

    <!-- 강사 자격 신청 -->
    <insert id="apply" parameterType="com.capstone.snowe.dto.TeacherDTO">
        INSERT INTO APPLY_TEACHER (
            login_id,
            name,
            CLASSIFICATION,
            CLASS_LEVEL,
            INTRODUCE,
            RESORT_ID,
            HISTORY,
            CAREER,
            TEAM
        ) VALUES (
            #{loginId}
            , #{name}
            ,#{classification}
            ,#{classLevel}
            ,#{introduce}
            ,(select code
              from common_code
              where no = '005'
              and code_value = #{resortName})
            ,#{history}
            ,#{career}
            ,#{team}
        )
    </insert>

    <!-- 회원 상세정보 조회 -->
    <select id="findByLoginId" parameterType="string" resultType="com.capstone.snowe.dto.MemberDTO">
        SELECT
        <include refid="memberColumns" />
        FROM
        member
        WHERE
        login_id = #{value}
    </select>

    <!-- ID 중복 체크  -->
    <select id="countByLoginId" parameterType="string" resultType="int">
        SELECT
            COUNT(*)
        FROM
            member
        WHERE
            login_id = #{value}
    </select>

    <!-- 닉네임 중복 체크  -->
    <select id="checkNickname" parameterType="string" resultType="int">
        SELECT
            COUNT(*)
        FROM
            member
        WHERE
            nickname = #{value}
    </select>

    <!-- 강사 전체 조회 쿼리  -->
    <select id="getAllTeacher" parameterType="string" resultType="com.capstone.snowe.dto.TeacherDTO">
        SELECT
            a.login_Id,
            a.name,
            c.resort_id,
            d.classification,
            a.introduce,
            a.class_level,
            a.career,
            a.history
        FROM
            teacher a
                INNER JOIN (select code_value as resort_id,code
                            from common_code
                            where no ='005') c
                           on a.resort_id = c.code
                INNER JOIN (select code_value as classification,code
                            from common_code
                            where no ='006' and code = 'CL02' ) d
                           on a.classification = d.code
    </select>

    <select id="getBoardTeacher" parameterType="string" resultType="com.capstone.snowe.dto.TeacherDTO">
        SELECT
            a.login_Id,
            a.name,
            c.resort_id,
            d.classification,
            a.introduce,
            a.class_level,
            a.career,
            a.history,
            a.team
        FROM
            teacher a
                INNER JOIN (select code_value as resort_id,code
                            from common_code
                            where no ='005') c
                           on a.resort_id = c.code
                INNER JOIN (select code_value as classification,code
                            from common_code
                            where no ='006' and code = 'CL02' ) d
                           on a.classification = d.code
    </select>

    <select id="getSkiTeacher" parameterType="string" resultType="com.capstone.snowe.dto.TeacherDTO">
        SELECT
            a.login_Id,
            a.name,
            c.resort_id,
            d.classification,
            a.introduce,
            a.class_level,
            a.career,
            a.history,
            a.team
        FROM
            teacher a
                INNER JOIN (select code_value as resort_id,code
                            from common_code
                            where no ='005') c
                           on a.resort_id = c.code
                INNER JOIN (select code_value as classification,code
                            from common_code
                            where no ='006' and code = 'CL01' ) d
                           on a.classification = d.code
    </select>

</mapper>